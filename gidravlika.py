import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

@st.cache_data
def load_data():
    return pd.read_excel("Pipe_size.xlsx", sheet_name="–õ–∏—Å—Ç1")

def run_hydraulic_calc():
    st.title("üîß –ì–∏–¥—Ä–∞–≤–ª–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç —Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥–∞")

    df = load_data()

    # –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π —Å—Ç–æ–ª–±—Ü–æ–≤
    df = df.dropna(subset=["–†–µ–≥–∏–æ–Ω", "–ú–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏–µ ", "–û–±—ä–µ–∫—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏", "–ù–∞—á–∞–ª–æ "])

    # –§–∏–ª—å—Ç—Ä—ã –ø–æ –¥–∞–Ω–Ω—ã–º
    region = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω:", df["–†–µ–≥–∏–æ–Ω"].unique())
    df_region = df[df["–†–µ–≥–∏–æ–Ω"] == region]

    field = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏–µ:", df_region["–ú–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏–µ "].unique())
    df_field = df_region[df_region["–ú–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏–µ "] == field]

    plant = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏:", df_field["–û–±—ä–µ–∫—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏"].unique())
    df_plant = df_field[df_field["–û–±—ä–µ–∫—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏"] == plant]

    start_point = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—á–∞–ª–æ —É—á–∞—Å—Ç–∫–∞:", df_plant["–ù–∞—á–∞–ª–æ "].unique())
    pipe_row = df_plant[df_plant["–ù–∞—á–∞–ª–æ "] == start_point]

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ —Ç—Ä—É–±—ã
    st.subheader("üìå –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç—Ä—É–±—ã:")
    length = pipe_row["–ü—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å"].values[0]
    diameter = pipe_row["–î–∏–∞–º–µ—Ç—Ä –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–∞"].values[0]
    thickness = pipe_row["–¢–æ–ª—â–∏–Ω–∞ —Å—Ç–µ–Ω–∫–∏"].values[0]
    st.markdown(f"- –ü—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å: **{length} –º**")
    st.markdown(f"- –î–∏–∞–º–µ—Ç—Ä: **{diameter} –º–º**")
    st.markdown(f"- –¢–æ–ª—â–∏–Ω–∞ —Å—Ç–µ–Ω–∫–∏: **{thickness} –º–º**")

    # –í–≤–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≥–∞–∑–∞
    st.subheader("üõ†Ô∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–∞–∑–∞:")
    pressure = st.number_input("–î–∞–≤–ª–µ–Ω–∏–µ –≥–∞–∑–∞ (–ú–ü–∞)", min_value=0.7)
    flow = st.number_input("–†–∞—Å—Ö–æ–¥ –≥–∞–∑–∞ (—Ç—ã—Å. –º¬≥/—Å—É—Ç)", min_value=100)
    t_gas = st.number_input("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≥–∞–∑–∞ (¬∞C)", min_value=30.0)
    t_soil = st.number_input("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≥—Ä—É–Ω—Ç–∞ (¬∞C)", min_value=-5.0)
    humidity = st.number_input("–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–ª–∞–≥–∏ (%)", min_value=0.02)
    density = st.number_input("–ü–ª–æ—Ç–Ω–æ—Å—Ç—å –≥–∞–∑–∞ (–∫–≥/–º¬≥)", min_value=0.9)

    st.divider()

    if st.button("üöÄ –ü–æ—Å—á–∏—Ç–∞—Ç—å –≥–∏–¥—Ä–∞–≤–ª–∏–∫—É"):
        if all([pressure, flow, t_gas, t_soil, humidity, density]):
            # –ü–µ—Ä–µ–≤–æ–¥ –µ–¥–∏–Ω–∏—Ü –∏ —Ä–∞—Å—á—ë—Ç—ã
            diameter_m = diameter / 1000  # –º–º ‚Üí –º
            velocity = flow * 1000 / (86400 * 3.14 * (diameter_m / 2) ** 2)
            friction_loss = 0.02 * (length / diameter_m) * (density * velocity ** 2) / 2 / 1e5 / 10  # –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞

            # –í—ã–≤–æ–¥ –º–µ—Ç—Ä–∏–∫
            st.success("‚úÖ –†–∞—Å—á–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            st.metric("–ü–æ—Ç–µ—Ä–∏ –¥–∞–≤–ª–µ–Ω–∏—è", f"{friction_loss:.2f} –ú–ü–∞")
            st.metric("–°–∫–æ—Ä–æ—Å—Ç—å –≥–∞–∑–∞", f"{velocity:.2f} –º/—Å")

            # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞–¥–µ–Ω–∏—è –¥–∞–≤–ª–µ–Ω–∏—è –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏
            step = 10  # —à–∞–≥ –ø–æ –¥–ª–∏–Ω–µ, –º
            x_vals = list(range(0, int(length) + step, step))
            pressure_vals = []
            velocity_vals = []

            for x in x_vals:
                local_loss = friction_loss * (x / length)
                local_pressure = pressure - local_loss
                pressure_vals.append(local_pressure)
                velocity_vals.append(velocity)  # —Å–∫–æ—Ä–æ—Å—Ç—å –Ω–µ–∏–∑–º–µ–Ω–Ω–∞ –ø—Ä–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º —Ä–∞—Å—Ö–æ–¥–µ

            # –ì—Ä–∞—Ñ–∏–∫
            fig, ax1 = plt.subplots(figsize=(8, 5))
            ax1.plot(x_vals, pressure_vals, label="–î–∞–≤–ª–µ–Ω–∏–µ (–ú–ü–∞)", color="blue")
            ax1.set_xlabel("–î–ª–∏–Ω–∞ —Ç—Ä—É–±—ã (–º)")
            ax1.set_ylabel("–î–∞–≤–ª–µ–Ω–∏–µ (–ú–ü–∞)", color="blue")
            ax1.tick_params(axis="y", labelcolor="blue")
            ax1.set_title("üìâ –ü–∞–¥–µ–Ω–∏–µ –¥–∞–≤–ª–µ–Ω–∏—è –∏ —Å–∫–æ—Ä–æ—Å—Ç—å –≥–∞–∑–∞ –ø–æ –¥–ª–∏–Ω–µ —Ç—Ä—É–±—ã")

            ax2 = ax1.twinx()
            ax2.plot(x_vals, velocity_vals, label="–°–∫–æ—Ä–æ—Å—Ç—å (–º/—Å)", color="green", linestyle="--")
            ax2.set_ylabel("–°–∫–æ—Ä–æ—Å—Ç—å (–º/—Å)", color="green")
            ax2.tick_params(axis="y", labelcolor="green")

            fig.tight_layout()
            st.pyplot(fig)

        else:
            st.error("‚ùå –ù–µ –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É–∫–∞–∑–∞–Ω–∞ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –≥–∏–¥—Ä–∞–≤–ª–∏–∫–∏")

if __name__ == "__main__":
    run_hydraulic_calc()
