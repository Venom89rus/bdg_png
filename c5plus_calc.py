import streamlit as st  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É Streamlit –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
import matplotlib.pyplot as plt  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É matplotlib –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
import numpy as np  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É NumPy –¥–ª—è —á–∏—Å–ª–µ–Ω–Ω—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∫–æ–¥–µ)
import pandas as pd  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º pandas –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏

def run():
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ session_state
    df = st.session_state.get("filtered_df", None)
    if df is None or df.empty:
        st.warning("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")  # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç
        return

    st.subheader("–ê–Ω–∞–ª–∏–∑ –°‚ÇÖ+–≤.")  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞ –∞–Ω–∞–ª–∏–∑–∞
    st.info(f"üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: {len(df)}")  # –í—ã–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø–∏—Å–µ–π

    # –°–ø–∏—Å–æ–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, –≤—Ö–æ–¥—è—â–∏—Ö –≤ –°‚ÇÖ+–≤.
    components = ["–∏-–ü–µ–Ω—Ç–∞–Ω", "–Ω-–ü–µ–Ω—Ç–∞–Ω", "–ì–µ–∫—Å–∞–Ω—ã", "–ì–µ–ø—Ç–∞–Ω—ã", "–û–∫—Ç–∞–Ω—ã"]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤ DataFrame
    for comp in components:
        if comp not in df.columns:
            st.warning(f"–ö–æ–º–ø–æ–Ω–µ–Ω—Ç {comp} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö.")  # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –µ—Å–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
            return

    # –ú–æ–ª—è—Ä–Ω—ã–µ –º–∞—Å—Å—ã (–≥/–º–æ–ª—å) –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –º–∞—Å—Å–æ–≤–æ–π –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏
    molar_masses = {
        "–∏-–ü–µ–Ω—Ç–∞–Ω": 72.15,
        "–Ω-–ü–µ–Ω—Ç–∞–Ω": 72.15,
        "–ì–µ–∫—Å–∞–Ω—ã": 86.18,
        "–ì–µ–ø—Ç–∞–Ω—ã": 100.2,
        "–û–∫—Ç–∞–Ω—ã": 114.23
    }

    Vm = 0.022414  # –º¬≥/–º–æ–ª—å ‚Äî –º–æ–ª—è—Ä–Ω—ã–π –æ–±—ä—ë–º –≥–∞–∑–∞ –ø—Ä–∏ –Ω–æ—Ä–º–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö

    # –†–∞—Å—á–µ—Ç –º–∞—Å—Å–æ–≤–æ–π –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏ –∫–∞–∂–¥–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ (–≤ –≥/–º¬≥)
    for comp in components:
        df[comp + "_g_m3"] = df[comp] / 100 * molar_masses[comp] / Vm  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—ä—ë–º–Ω—É—é –¥–æ–ª—é –≤ –º–∞—Å—Å–æ–≤—É—é –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é

    # –°—É–º–º–∏—Ä—É–µ–º –º–∞—Å—Å–æ–≤—ã–µ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏ –ø–æ –≤—Å–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º ‚Üí –ø–æ–ª—É—á–∞–µ–º –°‚ÇÖ+–≤.
    df["–°5+–≤."] = df[[f"{c}_g_m3" for c in components]].sum(axis=1)  # –ò—Ç–æ–≥–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –°‚ÇÖ+–≤.

    # üìà –í—ã–≤–æ–¥–∏–º –±–∞–∑–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –°‚ÇÖ+–≤.
    st.markdown("### üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –°‚ÇÖ+–≤.")
    col1, col2, col3 = st.columns(3)  # –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    col1.metric("–°—Ä–µ–¥–Ω–µ–µ", f"{df['–°5+–≤.'].mean():.2f} –≥/–º¬≥")  # –°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    col2.metric("–ú–∞–∫—Å–∏–º—É–º", f"{df['–°5+–≤.'].max():.2f} –≥/–º¬≥")  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    col3.metric("–ú–∏–Ω–∏–º—É–º", f"{df['–°5+–≤.'].min():.2f} –≥/–º¬≥")  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

    # üìä –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –ø–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º (50, 100, 150 ‚Ä¶)
    st.markdown("### üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏ –°‚ÇÖ+–≤.")

    step = 50  # –®–∞–≥ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ –≤ –≥/–º¬≥
    max_value = df["–°5+–≤."].max()  # –ù–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    bins = list(range(0, int(max_value) + step, step))  # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã

    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º (–∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è)
    df["interval"] = pd.cut(df["–°5+–≤."], bins=bins)  # –†–∞–∑–±–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã

    # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ –∫–∞–∂–¥–æ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ
    counts = df["interval"].value_counts().sort_index()  # –°—á–∏—Ç–∞–µ–º —á–∞—Å—Ç–æ—Ç—ã –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤

    # –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤—ã–≤–∞–µ–º –ø—É—Å—Ç—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã (–≥–¥–µ count == 0)
    counts = counts[counts > 0]  # –£–±–∏—Ä–∞–µ–º –Ω—É–ª–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã

    # –°—Ç—Ä–æ–∏–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—É—é –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—É
    fig, ax = plt.subplots(figsize=(10, 6))  # –°–æ–∑–¥–∞–µ–º —Ñ–∏–≥—É—Ä—É –∏ –æ—Å—å –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞

    for i, (interval, count) in enumerate(counts.items()):  # –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
        label = f"{int(interval.left)}‚Äì{int(interval.right)}"  # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
        ax.barh(y=label, width=count, height=0.8, color='blue', edgecolor='black')  # –†–∏—Å—É–µ–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å—Ç–æ–ª–±–∏–∫
        ax.text(count + 0.5, i, str(count), va='center', fontsize=10)  # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–±–æ—Ä–æ–≤

    ax.set_title("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è –°‚ÇÖ+–≤. (–≥/–º¬≥)")  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≥—Ä–∞—Ñ–∏–∫–∞
    ax.set_xlabel("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–±–æ—Ä–æ–≤")  # –ü–æ–¥–ø–∏—Å—å –æ—Å–∏ X
    ax.set_ylabel("–ò–Ω—Ç–µ—Ä–≤–∞–ª—ã –°‚ÇÖ+–≤., –≥/–º¬≥")  # –ü–æ–¥–ø–∏—Å—å –æ—Å–∏ Y

    st.pyplot(fig)  # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≥—Ä–∞—Ñ–∏–∫ –≤ Streamlit

    # üßæ –¢–∞–±–ª–∏—Ü–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    display_cols = [col for col in ["–ú–µ—Å—Ç–æ—Ä–æ–∂–¥–µ–Ω–∏–µ", "–î–ù–°", "–°—Ç—É–ø–µ–Ω—å –æ—Ç–±–æ—Ä–∞", "–î–∞—Ç–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞"] if col in df.columns]  # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    df_display = df[display_cols + components + ["–°5+–≤."]].copy()  # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    df_display["–°5+–≤."] = df_display["–°5+–≤."].round(2)  # –û–∫—Ä—É–≥–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –°‚ÇÖ+–≤.

    # –î–æ–±–∞–≤–ª—è–µ–º CSS –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã
    st.markdown("""
        <style>
            .scroll-free-table table {
                width: 100% !important;
                table-layout: auto !important;
                border-collapse: collapse;
            }
            .scroll-free-table th, .scroll-free-table td {
                text-align: left;
                padding: 6px 10px;
                font-size: 14px;
                border: 1px solid #ddd;
            }
        </style>
    """, unsafe_allow_html=True)

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º HTML-—Ç–∞–±–ª–∏—Ü—É —Å –¥–∞–Ω–Ω—ã–º–∏
    st.markdown(f'<div class="scroll-free-table">{df_display.to_html(index=False)}</div>', unsafe_allow_html=True)